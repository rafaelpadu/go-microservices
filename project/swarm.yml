version: '3'

services:
  caddy:
    image: rafaelpadua07/micro-caddy:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - bridge

  front-end:
    image: rafaelpadua07/front-end-go:1.0.1
    deploy:
      mode: replicated
      replicas: 1
    environment:
      BROKER_URL: "http://backend"
    networks:
      - bridge

  broker-service:
    image: rafaelpadua07/broker-service:1.0.2
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - bridge

  listener-service:
    image: rafaelpadua07/listener-service:1.0.1
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - bridge

  authentication-service:
    image: rafaelpadua07/auth-service:1.0.0
    ports:
      - "8087:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=172.17.0.1 port=5432 user=postgres password=postgres dbname=users sslmode=disable timezone=UTC connect_timeout=5"
    networks:
      - bridge

  logger-service:
    image: rafaelpadua07/logger-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - bridge

  mail-service:
    image: rafaelpadua07/mail-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - bridge
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "Rafael de PÃ¡dua"
      FROM_ADDRESS: rafael.padua@example.com

#  rabbitmq:
#    image: 'rabbitmq:3.13.0-management-alpine'
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    volumes:
#      - ./db-data/rabbitmq/data:/var/lib/rabbitmq
#      - ./db-data/rabbitmq/log:/var/log/rabbitmq
#    environment:
#      RABBITMQ_DEFAULT_USER: 'user'
#      RABBITMQ_DEFAULT_PASS: '123456'
#    deploy:
#      mode: global
#    networks:
#      - bridge
#
#  mailhog:
#    image: 'mailhog/mailhog:latest'
#    ports:
#      - "8025:8025"
#    deploy:
#      mode: global
#    networks:
#      - bridge
#
#  mongo-golang:
#    image: 'mongo:latest'
#    ports:
#      - "27017:27017"
#    networks:
#      - bridge
#    deploy:
#      mode: global
#    environment:
#      MONGO_INITDB_DATABASE: logs
#      MONGO_INITDB_ROOT_USERNAME: admin
#      MONGO_INITDB_ROOT_PASSWORD: password
#    volumes:
#      - ./db-data/mongo/:/data/db
#
#  postgres-golang:
#    image: 'postgres:latest'
#    ports:
#      - "5432:5432"
#    deploy:
#      mode: replicated
#      replicas: 1
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_DB: users
#    volumes:
#      - pgdata:/var/lib/postgresql/data
#    networks:
#      - bridge
#    extra_hosts:
#      - "host.docker.internal:172.17.0.1"

networks:
  bridge:
    external:
      name: bridge

volumes:
  pgdata:
  caddy_data:
    external: true
  caddy_config:
